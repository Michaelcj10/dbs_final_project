{"version":3,"sources":["webpack:///./src/api/apiRequest.ts","webpack:///./src/components/loader/pageLoader.tsx","webpack:///./src/components/authentication/isAuthenticated.tsx","webpack:///./src/routes/home/home.tsx","webpack:///./src/services/date.ts"],"names":["fetchReq","apiUrl","makeGet","url","cookieAuth","method","withCredentials","headers","Accept","then","res","json","makePost","postData","fetchData","body","JSON","stringify","makePostWithAuth","isPut","catch","err","console","log","LoaderStyle","div","LoaderSpinnerStyle","size","userProfile","dispatch","changePage","value","setUserProfile","props","checked","setChecked","response","user","fetchMyAPI","children","Title","Search","StyledSpanHeading","span","AddButton","SearchInput","Flex","setViewedMsg","messages","setMessages","filter","setFilter","colorAvatarPallete","reverse","filtered","IconText","icon","text","className","lg","orientation","plain","length","allowClear","onChange","e","currentTarget","placeholder","style","width","type","onClick","map","x","y","key","loading","active","avatar","itemLayout","dataSource","username","indexOf","renderItem","message","i","Item","cursor","actions","MessageOutlined","replies","Meta","backgroundColor","UserOutlined","title","unformatted","Created_date","d","Date","now","getFullYear","getMonth","getDay","getHours","getMinutes","description","comment"],"mappings":"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","file":"9.js","sourcesContent":["import { getCookie } from \"../services/cookie\";\r\n\r\nconst fetchReq = require(\"node-fetch\");\r\nconst apiUrl = \"https://project-10521262.herokuapp.com/\";\r\n\r\nexport const makeGet = async (url: string) => {\r\n\r\n    const cookieAuth = getCookie(\"token\");\r\n\r\n    let fetchData = {\r\n        method: \"GET\",\r\n        withCredentials: true,\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\" : cookieAuth\r\n        }\r\n      };\r\n\r\n    return await fetchReq(apiUrl + url, fetchData, {\r\n        method: \"GET\"\r\n      }).then(res => res.json());\r\n};\r\n\r\nexport const makePost = async (url: string, postData ) => {\r\n    let fetchData = {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n            ...postData\r\n          })\r\n      };\r\n\r\n    return await fetchReq(apiUrl + url, fetchData, {\r\n        method: \"POST\"\r\n      }).then(res => res.json());\r\n};\r\n\r\nexport const makePostWithAuth = async (url: string, postData, isPut: boolean = false ) => {\r\n\r\n     const cookieAuth = getCookie(\"token\");\r\n \r\n     let fetchData = {\r\n           method: isPut ? \"PUT\" : \"POST\",\r\n           headers: {\r\n             Accept: \"application/json\",\r\n             \"Content-Type\": \"application/json\",\r\n             \"Authorization\": cookieAuth\r\n           },\r\n           withCredentials: true,\r\n           body: JSON.stringify({\r\n             ...postData\r\n           })\r\n       };\r\n \r\n     return await fetchReq(apiUrl + url, fetchData, {\r\n         method: \"POST\"\r\n       }).then(res => res.json()).catch((err) => {\r\n          // tslint:disable-next-line: no-console\r\n          console.log(err);\r\n       });\r\n };","import { Spin } from \"antd\";\r\nimport * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LoaderStyle = styled.div`\r\n    position: fixed;\r\n    height: 100%;\r\n    width: 100%;\r\n    background: rgba(255,255,255, 0.5);\r\n`;\r\n\r\nconst LoaderSpinnerStyle = styled(Spin)`\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n`;\r\n\r\nfunction PageLoader() {\r\n  return (\r\n      <LoaderStyle>\r\n           <LoaderSpinnerStyle size=\"large\" />\r\n      </LoaderStyle>\r\n  );\r\n}\r\n\r\nexport default PageLoader;","import { setUserProfile } from \"../../modules/counter\";\r\nimport { push } from \"connected-react-router\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\nimport React from \"react\";\r\nimport PageLoader from \"../loader/pageLoader\";\r\nimport { makeGet } from \"../../api/apiRequest\";\r\n\r\n// tslint:disable-next-line: typedef\r\nfunction IsAuthenticated(props) {\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  useEffect( () => {\r\n    async function fetchMyAPI() {\r\n      try {\r\n        const response = await makeGet(\"me\");\r\n        if (!response || !response.user) {\r\n          props.changePage(\"/auth\");\r\n        } else {\r\n          props.setUserProfile(response);\r\n          setChecked(true);      \r\n        }\r\n    \r\n      } catch (error) {\r\n        props.changePage(\"/auth\");\r\n      }\r\n    }\r\n\r\n    fetchMyAPI();\r\n},           [] );\r\n\r\n  if (!checked) {\r\n      return <PageLoader />;\r\n  }\r\n\r\n  return props.children;\r\n}\r\n\r\nconst mapStateToProps = ({ counter }) => ({\r\n  userProfile: counter.userProfile\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      changePage: value => push(value),\r\n      setUserProfile\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)((IsAuthenticated));","import * as React from \"react\";\r\nimport { push } from \"connected-react-router\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport IsAuthenticated from \"../../components/authentication/isAuthenticated\";\r\nimport { Row, Col, Typography, List, Avatar, Space, Divider, Skeleton , Button, Input } from \"antd\";\r\nimport { UserOutlined, MessageOutlined } from \"@ant-design/icons\";\r\nimport styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\nimport { makeGet } from \"../../api/apiRequest\";\r\nimport { MessageItem } from \"../../domain/interfaces\";\r\nimport { getTimeFrameFromNow } from \"../../services/date\";\r\nimport { setViewedMsg } from \"../../modules/counter\";\r\n\r\nconst { Title } = Typography;\r\nconst { Search } = Input;\r\n\r\nconst StyledSpanHeading = styled.span`\r\n  font-weight:bold;\r\n\r\n  span{\r\n    font-weight: normal;\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nconst AddButton = styled(Button)`\r\n  margin-bottom: 25px;\r\n  font-weight:bold;\r\n`;\r\n\r\nconst SearchInput = styled(Search)`\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\n// tslint:disable-next-line: typedef\r\nfunction Home(props) {\r\n  const [messages, setMessages] = useState<MessageItem[]|null>(null);\r\n  const [filter, setFilter] = useState<string>(\"\");\r\n  const colorAvatarPallete = [\"#87d068\", \"#f56a00\", \"#1890ff\"];\r\n \r\n  React.useEffect( () => {\r\n    async function fetchMyAPI() {\r\n      try {\r\n        const response = await makeGet(\"messages\");\r\n        setMessages(response.reverse());\r\n      } catch (error) {\r\n        setMessages([]);\r\n      }\r\n    }\r\n\r\n    fetchMyAPI();\r\n  },               [] );\r\n\r\n  const IconText = ({ icon, text }) => (\r\n    <Space>\r\n      {React.createElement(icon)}\r\n      {text}\r\n    </Space>\r\n  );\r\n\r\n  const getFiltered = (): MessageItem[] => {\r\n    let filtered: MessageItem[] = messages ? messages : [];\r\n\r\n    if (filter !== \"\") {\r\n\r\n      if (messages) {\r\n         filtered = messages!.filter(x => x.username.indexOf(filter) > -1);\r\n      }\r\n\r\n      return filtered;  \r\n    }\r\n\r\n    return filtered;\r\n  };\r\n\r\n  return (\r\n    <IsAuthenticated>\r\n      <div className=\"layout\">\r\n        <Row>\r\n          <Col span={2} lg={6}/>     \r\n          <Col span={20} lg={12}>\r\n            <Title>Message center</Title>\r\n            <Divider orientation=\"left\" plain={true} >{`Messages total (${messages?.length ? messages.length : \"\"})`}</Divider>\r\n                <Flex>\r\n                  <SearchInput\r\n                    allowClear={true}\r\n                    onChange={(e) => {\r\n                      setFilter(e.currentTarget.value); \r\n                    }}\r\n                    placeholder=\"Search username\"\r\n                    style={{ width: 200 }}\r\n                  />\r\n                  <AddButton \r\n                    type=\"link\" \r\n                    size=\"large\" \r\n                    onClick={() => {\r\n                      props.changePage(\"/add-message\");\r\n                    }}\r\n                  >\r\n                    Add new message\r\n                  </AddButton>\r\n                </Flex>\r\n            {messages === null  ? <div> {[1, 2, 3, 4].map( (x, y) => {\r\n                return <Skeleton key={y} loading={true} active={true} avatar={true} />;\r\n            })} </div> : \r\n           <List\r\n              itemLayout=\"horizontal\"\r\n              dataSource={getFiltered()}\r\n              renderItem={(message, i) => (\r\n                <List.Item\r\n                   style={{cursor: \"pointer\"}}\r\n                   onClick={() => {\r\n                     props.setViewedMsg(message);\r\n                     props.changePage(\"/view-message\");\r\n                   }}\r\n                   actions={[\r\n                  <IconText icon={MessageOutlined} text={message.replies.length} key=\"list-vertical-message\" />,\r\n                ]}\r\n                >\r\n                  <List.Item.Meta\r\n                    avatar={<Avatar style={{backgroundColor: i % 3 === 0 ? colorAvatarPallete[2] :  i % 2 === 0 ?  colorAvatarPallete[1] : colorAvatarPallete[0]}} icon={<UserOutlined />} />}\r\n                    title={<StyledSpanHeading>{message.title} <span>{getTimeFrameFromNow(message.Created_date!)}</span></StyledSpanHeading>}\r\n                    description={message.username}\r\n                    \r\n                  />\r\n                  {message.comment}\r\n                </List.Item>\r\n              )}\r\n           />}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </IsAuthenticated>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ counter }) => ({\r\n  userProfile: counter.userProfile\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      changePage: value => push(value),\r\n      setViewedMsg\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)((Home));","\r\nconst months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Nov\", \"Dec\"];\r\n\r\nexport const getFormattedDate = (unformatted: string): string => {\r\n    const d = new Date(unformatted);\r\n    return `${d.getDay()} ${months[d.getMonth()]} ${d.getFullYear()}`;\r\n};\r\n\r\nexport const getTimeFrameFromNow = (unformatted: Date) => {\r\n    const d = new Date(unformatted);\r\n\r\n    const now = new Date();\r\n\r\n    if (now.getFullYear() > d.getFullYear()) {\r\n        return `${now.getFullYear() - d.getFullYear()} years ago` ;\r\n    }\r\n\r\n    if (now.getFullYear() === d.getFullYear() && now.getMonth() !== d.getMonth()) {\r\n        return `${now.getMonth() - d.getMonth()} months ago` ;\r\n    }\r\n\r\n    if (now.getMonth() === d.getMonth() && now.getDay() !== d.getDay()) {\r\n        return `${now.getDay() - d.getDay()} days ago` ;\r\n    }\r\n\r\n    if (now.getDay() === d.getDay() && now.getHours() !== d.getHours()) {\r\n        return `${now.getHours() - d.getHours()} hours ago` ;\r\n    }\r\n\r\n    if (now.getHours() === d.getHours() && now.getMinutes() !== d.getMinutes()) {\r\n        return `${now.getMinutes() - d.getMinutes()} minutes ago` ;\r\n    }\r\n\r\n    return \"Just now\";\r\n};"],"sourceRoot":""}