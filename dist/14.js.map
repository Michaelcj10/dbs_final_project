{"version":3,"sources":["webpack:///./src/routes/auth/auth.tsx"],"names":["Title","Paragraph","FullBtn","SwitchLink","userProfile","dispatch","changePage","value","props","loggedIn","user","email","hasAccount","setHasAccount","formLoading","setLoading","info","className","span","lg","status","title","subTitle","extra","type","onClick","key","layout","name","initialValues","remember","onFinish","values","dataPost","id","password","response","errors","error","token","Item","label","rules","required","message","disabled","Password","htmlType","loading","size"],"mappings":"2pDAUQA,EAAqB,IAAU,MAAxBC,EAAc,IAAU,UAEjCC,EAAU,YAAO,IAAP,CAAc,yDAIxBC,EAAa,YAAO,IAAP,CAAc,uGA2HjC,I,IAYe,uBAZS,SAAC,GAAgB,OACvCC,YADgC,UACXA,gBAGI,SAAAC,GACzB,mBACE,CACEC,WAAY,SAAAC,GAAS,mBAAKA,KAE5BF,KAGW,EAlIf,SAAcG,GAAd,WACQC,EAAWD,EAAMJ,aAAeI,EAAMJ,YAAYM,MAAQF,EAAMJ,YAAYM,KAAKC,MACjF,EAA8B,oBAAS,GAAtCC,EAAU,KAAEC,EAAa,KAC1B,EAA4B,oBAAS,GAApCC,EAAW,KAAEC,EAAU,KAiC9B,OA/BA,qBACG,WACON,GACF,IAAQO,KAAK,0CAElB,IA2BD,uBAAKC,UAAU,UACb,gBAAC,IAAG,KACF,gBAAC,IAAG,CAACC,KAAM,EAAGC,GAAI,IAChBV,EAqDD,gBAAC,IAAG,CAACS,KAAM,GAAIC,GAAI,GACnB,gBAAC,IAAM,CACJC,OAAO,UACPC,MAAM,6BACNC,SAAS,wDACTC,MAAO,CACL,gBAAC,IAAM,CACHC,KAAK,UACLC,QAAS,WACPjB,EAAMF,WAAW,eAEnBoB,IAAI,WAAS,iBA/DvB,gBAAC,IAAG,CAACR,KAAM,GAAIC,GAAI,GACnB,gBAACnB,EAAK,KAAEY,EAAa,eAAiB,gBACtC,gBAAC,IAAI,CACDe,OAAO,WACPC,KAAK,QACLC,cAAe,CAAEC,UAAU,GAC3BC,SAnCO,SAAOC,GAAyC,qC,0DAE/DjB,GAAW,GAELkB,EAAW,CACftB,MAAOqB,EAAOE,GACdC,SAAUH,EAAOG,U,iBAIA,O,sBAAA,GAAM,YAASvB,EAAa,QAAU,WAAYqB,I,cAA7DG,EAAW,UACJC,QACX,IAAQC,MAAM,8BACdvB,GAAW,KAEX,YAAU,QAASqB,EAASG,OAC5B/B,EAAMF,WAAW,e,6BAGnB,IAAQgC,MAAM,8BACdvB,GAAW,G,gCAiBP,gBAAC,IAAKyB,KAAI,CACRC,MAAM,QACNb,KAAK,KACLc,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,8BAEnC,gBAAC,IAAK,CAACC,SAAU/B,KAGnB,gBAAC,IAAK0B,KAAI,CACRC,MAAM,WACNb,KAAK,WACLc,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,yBAEnC,gBAAC,IAAME,SAAQ,CAACD,SAAU/B,KAE5B,gBAAC,IAAK0B,KAAI,KACR,gBAACtC,EAAO,CAACsB,KAAK,UAAUuB,SAAS,SAASC,QAASlC,GAClDF,EAAa,QAAU,aAG1B,gBAACT,EAAU,CACLqB,KAAK,OACLyB,KAAK,QACLxB,QAAS,WACNZ,GAAeD,KAGnBA,EAAa,gCAAkC,+BAGtD,gBAAC,IAAO,kBACR,gBAACX,EAAS,K,oGAGL,gBAACE,EAAU,CACNqB,KAAK,OACLC,QAAS,WACLjB,EAAMF,WAAW,qBACpB,UAyBX,gBAAC,IAAG,CAACY,KAAM,EAAGC,GAAI","file":"14.js","sourcesContent":["import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { push } from \"connected-react-router\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Input, Button, Row, Col, Typography, message, Divider, Result } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { makePost } from \"../../api/apiRequest\";\r\nimport { setCookie } from \"../../services/cookie\";\r\n\r\nconst { Title, Paragraph } = Typography;\r\n\r\nconst FullBtn = styled(Button)`\r\n  width: 100%;\r\n`;\r\n\r\nconst SwitchLink = styled(Button)`\r\n  padding: 0px;\r\n  font-weight: bold;\r\n`;\r\n\r\nfunction Auth(props: { userProfile: { user: { email: string; }; }; changePage: (arg0: string) => void; }) {\r\n  const loggedIn = props.userProfile && props.userProfile.user && props.userProfile.user.email;\r\n  const [hasAccount, setHasAccount] = useState(true);\r\n  const [formLoading, setLoading] = useState(false);\r\n\r\n  useEffect(\r\n     () => {\r\n       if (!loggedIn) {\r\n          message.info(\"Please login or register to continue\");\r\n       }\r\n  }, []);\r\n\r\n  const onFinish = async (values: { id: string; password: string; }) => {\r\n\r\n    setLoading(true);\r\n\r\n    const dataPost = {\r\n      email: values.id,\r\n      password: values.password\r\n    };\r\n    \r\n    try {\r\n      const response = await makePost(hasAccount ? \"login\" : \"register\", dataPost);\r\n      if (response.errors) {\r\n        message.error(\"Invalid details, try again\");    \r\n        setLoading(false);\r\n      } else {\r\n        setCookie(\"token\", response.token);\r\n        props.changePage(\"/dashboard\");\r\n      }\r\n    } catch (e) {\r\n      message.error(\"Invalid details, try again\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"layout\">\r\n      <Row>\r\n        <Col span={2} lg={8}/>     \r\n        {!loggedIn ? \r\n        <Col span={20} lg={8}>\r\n        <Title>{hasAccount ? \"Welcome back\" : \"Register now\"}</Title>\r\n        <Form\r\n            layout=\"vertical\"\r\n            name=\"basic\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n        >\r\n          <Form.Item\r\n            label=\"Email\"\r\n            name=\"id\"\r\n            rules={[{ required: true, message: \"Enter your email address\" }]}\r\n          >\r\n            <Input disabled={formLoading} />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            rules={[{ required: true, message: \"Enter your password\" }]}\r\n          >\r\n            <Input.Password disabled={formLoading} />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <FullBtn type=\"primary\" htmlType=\"submit\" loading={formLoading}>\r\n            {hasAccount ? \"Login\" : \"Register\"}\r\n            </FullBtn>\r\n          </Form.Item>\r\n          <SwitchLink \r\n                type=\"link\" \r\n                size=\"large\" \r\n                onClick={() => {\r\n                   setHasAccount(!hasAccount);\r\n                }}\r\n          >\r\n              {hasAccount ? \"New to the site? Register now\" : \"Have an account? Login now\"}\r\n          </SwitchLink>\r\n        </Form>\r\n        <Divider>Our terms</Divider>\r\n        <Paragraph>\r\n            By logging in you are accepting our terms and conditions and privacy policy. You can read\r\n            those &nbsp;\r\n             <SwitchLink \r\n                  type=\"link\" \r\n                  onClick={() => {\r\n                      props.changePage(\"/privacy-policy\");\r\n                  }}\r\n             >\r\n                here\r\n             </SwitchLink>\r\n        </Paragraph>\r\n        </Col> :  \r\n         <Col span={20} lg={8}>\r\n         <Result\r\n            status=\"success\"\r\n            title=\"You are already logged in!\"\r\n            subTitle=\"Visit your dashboard to start using our features now.\"\r\n            extra={[\r\n              <Button \r\n                  type=\"primary\"\r\n                  onClick={() => {\r\n                    props.changePage(\"/dashboard\");\r\n                  }} \r\n                  key=\"console\"\r\n              >\r\n                  Dashboard\r\n              </Button>,\r\n            ]}\r\n         /> \r\n         </Col>\r\n         }\r\n        <Col span={2} lg={8}/>    \r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ counter }) => ({\r\n  userProfile: counter.userProfile\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      changePage: value => push(value),\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)((Auth));"],"sourceRoot":""}