{"version":3,"sources":["webpack:///./src/components/loader/pageLoader.tsx","webpack:///./src/components/authentication/isAuthenticated.tsx","webpack:///./src/services/date.ts","webpack:///./src/routes/home/home.tsx"],"names":["LoaderStyle","div","LoaderSpinnerStyle","size","userProfile","dispatch","changePage","value","setUserProfile","setOrganisation","props","checked","setChecked","response","user","userId","org","console","log","fetchMyAPI","children","getTimeFrameFromNow","unformatted","d","Date","now","getFullYear","getMonth","getDay","getHours","getMinutes","MessageActionState","Title","Search","StyledSpanHeading","span","AddButton","SearchInput","Flex","Delete","Flag","setViewedMsg","messages","setMessages","filter","setFilter","colorAvatarPallete","email","skipped","setSkipped","actionInProgress","setInProgress","messageToAction","setAction","actionState","setActionState","getMessages","reverse","IconText","icon","text","getFiltered","notFlagged","x","status","flaggedYours","username","error","filtered","slice","indexOf","className","lg","orientation","plain","length","Input","style","width","height","active","allowClear","onChange","e","currentTarget","placeholder","onClick","map","y","key","loading","avatar","itemLayout","dataSource","renderItem","messageItem","i","Item","cursor","actions","replies","Meta","backgroundColor","title","Created_date","description","color","comment","stopPropagation","Deleting","Flagging","defaultCurrent","total","defaultPageSize","page","visible","onOk","id","_id","success","newReply","userName","warning","msg","dataPost","errors","onCancel"],"mappings":"iQAIMA,EAAc,IAAOC,IAAG,iOAOxBC,EAAqB,YAAO,IAAP,CAAY,mIAcxB,I,IAAA,EARf,WACE,OACI,gBAACF,EAAW,KACP,gBAACE,EAAkB,CAACC,KAAK,Y,q1CCwCrB,iBAdS,SAAC,GAAgB,OACvCC,YADgC,UACXA,gBAGI,SAAAC,GACzB,mBACE,CACEC,WAAY,SAAAC,GAAS,mBAAKA,IAC1BC,eAAc,IACdC,gBAAe,KAEjBJ,KAGW,EAlDf,SAAyBK,GACjB,MAAwB,oBAAS,GAAhCC,EAAO,KAAEC,EAAU,KA4B1B,OA1BA,qBAAW,YACT,W,6FAEqB,O,sBAAA,GAAM,YAAQ,O,cAAzBC,EAAW,WACCA,EAASC,KAAvB,OACFJ,EAAMJ,WAAW,S,cAEjBI,EAAMF,eAAeK,GACrBD,GAAW,G,iBAGG,O,sBAAA,GAAM,YAAQ,iBAAiBC,EAASE,S,cAA9CC,EAAM,SACZN,EAAMD,gBAAgBO,G,+BAGtBC,QAAQC,IAAI,G,gDAIhBR,EAAMJ,WAAW,S,8BAIrBa,KACS,IAENR,EAIED,EAAMU,SAHF,kBAAC,EAAU,U,iCCvCxB,sCAOaC,EAAsB,SAACC,GAChC,IAAMC,EAAI,IAAIC,KAAKF,GAEbG,EAAM,IAAID,KAEhB,OAAIC,EAAIC,cAAgBH,EAAEG,cACZD,EAAIC,cAAgBH,EAAEG,cAAa,aAG7CD,EAAIC,gBAAkBH,EAAEG,eAAiBD,EAAIE,aAAeJ,EAAEI,WACpDF,EAAIE,WAAaJ,EAAEI,WAAU,cAGvCF,EAAIE,aAAeJ,EAAEI,YAAcF,EAAIG,WAAaL,EAAEK,SAC5CH,EAAIG,SAAWL,EAAEK,SAAQ,YAGnCH,EAAIG,WAAaL,EAAEK,UAAYH,EAAII,aAAeN,EAAEM,WAC1CJ,EAAII,WAAaN,EAAEM,WAAU,aAGvCJ,EAAII,aAAeN,EAAEM,YAAcJ,EAAIK,eAAiBP,EAAEO,aAChDL,EAAIK,aAAeP,EAAEO,aAAY,eAGxC,a,4CCiBNC,E,wpDApCGC,EAAU,IAAU,MACpBC,EAAW,IAAK,OAElBC,EAAoB,IAAOC,KAAI,mMAS/BC,EAAY,YAAO,IAAP,CAAc,mHAK1BC,EAAc,YAAOJ,EAAP,CAAc,yEAI5BK,EAAO,IAAOrC,IAAG,mIAKjBsC,EAAS,YAAO,IAAP,CAAsB,2GAK/BC,EAAO,YAAO,IAAP,CAAoB,4GAKjC,SAAKT,GACH,2BAAU,2BAAU,+BADtB,CAAKA,MAAkB,KA6OvB,I,YAae,uBAbS,SAAC,GAAgB,OACvC3B,YADgC,UACXA,gBAGI,SAAAC,GACzB,mBACE,CACEC,WAAY,SAAAC,GAAS,mBAAKA,IAC1BkC,aAAY,KAEdpC,KAGW,EArPf,SAAcK,GAAd,I,EAAA,OACQ,EAA0B,mBAA6B,MAAtDgC,EAAQ,KAAEC,EAAW,KACtB,EAAsB,mBAAiB,IAAtCC,EAAM,KAAEC,EAAS,KAClBC,EAAqB,CAAC,UAAW,WACjCC,EAAQrC,EAAMN,aAAeM,EAAMN,YAAYU,KAAOJ,EAAMN,YAAYU,KAAKiC,MAAQ,GACrF,EAAwB,mBAAiB,GAAxCC,EAAO,KAAEC,EAAU,KACpB,EAAoC,oBAAkB,GAArDC,EAAgB,KAAEC,EAAa,KAChC,EAA+B,mBAA2B,MAAzDC,EAAe,KAAEC,EAAS,KAC3B,EAAgC,mBAAkC,MAAjEC,EAAW,KAAEC,EAAc,KAE5BC,EAAc,gD,wDAEC,O,sBAAA,GAAM,YAAQ,a,cAAzB3C,EAAW,SACjB8B,EAAY9B,EAAS4C,W,6BAErBd,EAAY,I,+BAIhB,aAAiB,YACf,W,mFACI,SAAMa,K,cAAN,S,WAGJrC,KACe,IAEjB,IAAMuC,EAAW,SAAC,G,IAAEC,EAAI,OAAEC,EAAI,OAAO,OACnC,gBAAC,IAAK,KACH,gBAAoBD,GACpBC,IAICC,EAAc,WAClB,IAAMC,EAAapB,EAAWA,EAASE,QAAO,SAAAmB,GAAK,MAAiB,YAAjBA,EAAEC,OAAQ,MAAoB,GAC7EC,EAA8B,GAElC,IACEA,EAAevB,EAAWA,EAASE,QAAO,SAAAmB,GAAK,MAAiB,YAAjBA,EAAEC,OAAQ,IAAoBD,EAAEG,WAAaxD,EAAMN,YAAYU,KAAKiC,SAAS,GAC5H,MAAOoB,GACPF,EAAe,GAIjBhD,QAAQC,IAAI4C,EAAYG,GACxB,IAAIG,EAA0B1B,EAAWA,aAAQ,EAARA,EAAU2B,MAAMrB,EAASA,EAAU,IAAM,GAElF,MAAe,KAAXJ,GAEGwB,IACDA,EAAWA,EAAUxB,QAAO,SAAAmB,GAAK,OAAAA,EAAEG,SAASI,QAAQ1B,IAAW,MAG3DwB,GAGHA,GAkET,OACE,gBAAC,IAAe,KACd,uBAAKG,UAAU,UACb,gBAAC,IAAG,KACF,gBAAC,IAAG,CAACpC,KAAM,EAAGqC,GAAI,IAClB,gBAAC,IAAG,CAACrC,KAAM,GAAIqC,GAAI,IACjB,gBAACxC,EAAK,uBACN,gBAAC,IAAO,CAACyC,YAAY,OAAOC,OAAO,GAC/BhC,EACF,2BACG,qBAAgC,QAAb,EAAAmB,WAAa,eAAEc,QAASd,IAAcc,OAAS,KAAG,KAF3D,gBAAC,IAASC,MAAK,CAACC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,QAASC,QAAQ,KAKzE,gBAAC1C,EAAI,KACFI,GAAYA,EAAUiC,OAAS,EAChC,gBAACtC,EAAW,CACV4C,YAAY,EACZC,SAAU,SAACC,GACTtC,EAAUsC,EAAEC,cAAc7E,QAE5B8E,YAAY,kBACZR,MAAO,CAAEC,MAAO,OACb,KACL,gBAAC1C,EAAS,CACRjC,KAAK,QACLmF,QAAS,WACP5E,EAAMJ,WAAW,kBAClB,YAKK,OAAboC,EAAqB,2B,IAAO,CAAC,EAAG,EAAG,EAAG,GAAG6C,KAAK,SAACxB,EAAGyB,GAC/C,OAAO,gBAAC,IAAQ,CAACC,IAAKD,EAAGE,SAAS,EAAMV,QAAQ,EAAMW,QAAQ,O,KAElE,gBAAC,WAAc,KACf,gBAAC,IAAI,CACHC,WAAW,aACXC,WAAYhC,IACZiC,WAAY,SAACC,EAAaC,GAAM,OAC9B,gBAAC,IAAKC,KAAI,CACPpB,MAAO,CAACqB,OAAQ,WAChBZ,QAAS,WACP5E,EAAM+B,aAAasD,GACnBrF,EAAMJ,WAAW,kBAEnB6F,QAAS,CACV,gBAACzC,EAAQ,CAACC,KAAM,IAAiBC,KAAMmC,EAAYK,QAAQzB,OAAQc,IAAI,4BAGvE,gBAAC,IAAKQ,KAAKI,KAAI,CACbV,OAAQ,gBAAC,IAAM,CAACd,MAAO,CAACyB,gBAAiBN,EAAI,GAAM,EAAIlD,EAAmB,GAAMA,EAAmB,IAAKa,KAAM,gBAAC,IAAY,QAC3H4C,MAAO,gBAACrE,EAAiB,KAAE6D,EAAYQ,M,IAAO,4BAAO,YAAoBR,EAAYS,gBACrFC,YAAaV,EAAY7B,WAAanB,EAAQ,MAAQgD,EAAY7B,WAGxC,YAA3B6B,EAAY/B,OAAQ,GAAmB,gBAAC,WAAQ,KAAC,gBAAC,IAAG,CAAC0C,MAAM,UAAQ,W,KAA8BX,EAAYY,QAC9GZ,EAAY7B,WAAanB,EAC1B,gBAACR,EAAM,CACH+C,QAAS,SAACH,GACNA,EAAEyB,kBACFrD,EAAexB,EAAmB8E,UAClCxD,EAAU0C,GACV5C,GAAc,MAEhB,KACsB,YAA3B4C,EAAY/B,OAAQ,IAAoB+B,EAAY7B,WAAanB,EAAQ,KAC1E,gBAACP,EAAI,CACD8C,QAAS,SAACH,GACNA,EAAEyB,kBACFrD,EAAexB,EAAmB+E,UAClCzD,EAAU0C,GACV5C,GAAc,UAM3BT,EAASiC,OAAS,GACpB,gBAAC,IAAU,CACNoC,eAAgB,EAChBC,MAAOtE,EAAUiC,OACjBsC,gBAAiB,GACjB/B,SAAU,SAACgC,GACTjE,EAAwB,IAAZiE,EAAO,OAErB,OAKN,gBAAC,IAAK,CACFX,MAAOjD,IAAgBvB,EAAmB8E,SAAW,cAAgB,WACrEM,QAASjE,EACTkE,KA5IQ,gD,iEAEZC,EAAKjE,aAAe,EAAfA,EAAiBkE,IAExBhE,IAAgBvB,EAAmB8E,SAAnC,Y,iBAEiB,O,sBAAA,GAAM,YAAW,WAAYQ,I,cAAxCxG,EAAW,SAEjBI,QAAQC,IAAIL,GACZ2C,IACAL,GAAc,GACd,IAAQoE,QAAQ,W,6BAEhB,IAAQpD,MAAM,wB,gCAIVqD,EAAW,CACfjB,MAAOnD,EAAiBmD,MACxBI,QAASvD,EAAiBuD,QAC1BP,QAAShD,EAAiBgD,QAC1BqB,SAAUrE,aAAe,EAAfA,EAAiBc,SAC3BF,OAAQV,IAAgBvB,EAAmB+E,SAAW,CAAC,WAAa,CAAC,MACrEN,aAAcpD,aAAe,EAAfA,EAAiBoD,c,iBAIV,O,sBAAA,GAAM,YAAiB,YAAYpD,EAAiBkE,IAAOE,GAAU,I,cAAhF3G,EAAW,SAEjBI,QAAQC,IAAIL,GACZ,IAAQ6G,QAAQ,oBAChBlE,IACAL,GAAc,GAEVG,IAAgBvB,EAAmB+E,WAnDhBhG,GAoDFsC,aAAe,EAAfA,EAAiBc,UAAWd,EAAgBc,SAAW,GApDvCyD,EAoD4C,2BApDjC,8B,wDAClDC,EAAW,CACf,cAAiB,CAAC,CAAC,aAAgBD,EAAK,OAAU7G,IAClD,OAAUA,G,iBAIO,O,sBAAA,GAAM,YAAiB,gBAAiB8G,I,cAAxC,SACJC,QACX,IAAQ1D,MAAM,8B,6BAIhB,IAAQA,MAAM,8B,8DA2CR,IAAQA,MAAM,uBAAwB,GACtCX,IACAL,GAAc,G,uBA1DE,IAAOrC,EAAc6G,SA8JnCG,SAAU,WACP3E,GAAc,KAGhBG,IAAgBvB,EAAmB8E,SACpC,uEACA","file":"11.js","sourcesContent":["import { Spin } from \"antd\";\r\nimport * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LoaderStyle = styled.div`\r\n    position: fixed;\r\n    height: 100%;\r\n    width: 100%;\r\n    background: rgba(255,255,255, 0.5);\r\n`;\r\n\r\nconst LoaderSpinnerStyle = styled(Spin)`\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n`;\r\n\r\nfunction PageLoader() {\r\n  return (\r\n      <LoaderStyle>\r\n           <LoaderSpinnerStyle size=\"large\" />\r\n      </LoaderStyle>\r\n  );\r\n}\r\n\r\nexport default PageLoader;","import { setUserProfile, setOrganisation } from \"../../modules/safehub\";\r\nimport { push } from \"connected-react-router\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\nimport React from \"react\";\r\nimport PageLoader from \"../loader/pageLoader\";\r\nimport { makeGet } from \"../../api/apiRequest\";\r\n\r\n// tslint:disable-next-line: typedef\r\nfunction IsAuthenticated(props) {\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  useEffect( () => {\r\n    async function fetchMyAPI() {\r\n      try {\r\n        const response = await makeGet(\"me\");\r\n        if (!response || !response.user) {\r\n          props.changePage(\"/auth\");\r\n        } else {\r\n          props.setUserProfile(response);\r\n          setChecked(true);      \r\n\r\n          try {\r\n            const org = await makeGet(`organisations/${response.userId}`);\r\n            props.setOrganisation(org);         \r\n          } catch (error) {\r\n            // tslint:disable-next-line: no-console\r\n            console.log(error);  \r\n          }\r\n        }\r\n      } catch (error) {\r\n        props.changePage(\"/auth\");\r\n      }\r\n    }\r\n\r\n    fetchMyAPI();\r\n},           [] );\r\n\r\n  if (!checked) {\r\n      return <PageLoader />;\r\n  }\r\n\r\n  return props.children;\r\n}\r\n\r\nconst mapStateToProps = ({ safehub }) => ({\r\n  userProfile: safehub.userProfile\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      changePage: value => push(value),\r\n      setUserProfile,\r\n      setOrganisation\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)((IsAuthenticated));","\r\nconst months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Nov\", \"Dec\"];\r\n\r\nexport const getFormattedDate = (unformatted: string): string => {\r\n    const d = new Date(unformatted);\r\n    return `${d.getDay()} ${months[d.getMonth()]} ${d.getFullYear()}`;\r\n};\r\n\r\nexport const getTimeFrameFromNow = (unformatted: Date) => {\r\n    const d = new Date(unformatted);\r\n\r\n    const now = new Date();\r\n\r\n    if (now.getFullYear() > d.getFullYear()) {\r\n        return `${now.getFullYear() - d.getFullYear()} years ago` ;\r\n    }\r\n\r\n    if (now.getFullYear() === d.getFullYear() && now.getMonth() !== d.getMonth()) {\r\n        return `${now.getMonth() - d.getMonth()} months ago` ;\r\n    }\r\n\r\n    if (now.getMonth() === d.getMonth() && now.getDay() !== d.getDay()) {\r\n        return `${now.getDay() - d.getDay()} days ago` ;\r\n    }\r\n\r\n    if (now.getDay() === d.getDay() && now.getHours() !== d.getHours()) {\r\n        return `${now.getHours() - d.getHours()} hours ago` ;\r\n    }\r\n\r\n    if (now.getHours() === d.getHours() && now.getMinutes() !== d.getMinutes()) {\r\n        return `${now.getMinutes() - d.getMinutes()} minutes ago` ;\r\n    }\r\n\r\n    return \"Just now\";\r\n};","import * as React from \"react\";\r\nimport { push } from \"connected-react-router\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport IsAuthenticated from \"../../components/authentication/isAuthenticated\";\r\nimport { Row, Col, Typography, List, Avatar, Space, Divider, Skeleton , Button, Input, Pagination, message, Modal, Tag } from \"antd\";\r\nimport { UserOutlined, MessageOutlined, DeleteOutlined, FlagOutlined } from \"@ant-design/icons\";\r\nimport styled from \"styled-components\";\r\nimport { useState, Fragment } from \"react\";\r\nimport { makeGet, makeDelete, makePostWithAuth } from \"../../api/apiRequest\";\r\nimport { MessageItem } from \"../../domain/interfaces\";\r\nimport { getTimeFrameFromNow } from \"../../services/date\";\r\nimport { setViewedMsg } from \"../../modules/safehub\";\r\n\r\nconst { Title } = Typography;\r\nconst { Search } = Input;\r\n\r\nconst StyledSpanHeading = styled.span`\r\n  font-weight:bold;\r\n\r\n  span{\r\n    font-weight: normal;\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nconst AddButton = styled(Button)`\r\n  margin-bottom: 25px;\r\n  font-weight:bold;\r\n`;\r\n\r\nconst SearchInput = styled(Search)`\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Delete = styled(DeleteOutlined)`\r\n  margin-left: 10px;\r\n  color: #c73737;\r\n`;\r\n\r\nconst Flag = styled(FlagOutlined)`\r\n  margin-left: 10px;\r\n  color: #1890ff;\r\n`;\r\n\r\nenum MessageActionState {\r\n  Flagging, Deleting, Unflagging\r\n}\r\n\r\n// tslint:disable-next-line: typedef\r\nfunction Home(props) {\r\n  const [messages, setMessages] = useState<MessageItem[]|null>(null);\r\n  const [filter, setFilter] = useState<string>(\"\");\r\n  const colorAvatarPallete = [\"#1de9b6\", \"#1890ff\"];\r\n  const email = props.userProfile && props.userProfile.user ? props.userProfile.user.email : \"\";\r\n  const [skipped, setSkipped] = useState<number>(0);\r\n  const [actionInProgress, setInProgress] = useState<boolean>(false);\r\n  const [messageToAction, setAction] = useState<MessageItem|null>(null);\r\n  const [actionState, setActionState] = useState<MessageActionState|null>(null);\r\n\r\n  const getMessages = async () => {\r\n    try {\r\n      const response = await makeGet(\"messages\");\r\n      setMessages(response.reverse());\r\n    } catch (error) {\r\n      setMessages([]);\r\n    }\r\n  };\r\n\r\n  React.useEffect( () => {\r\n    async function fetchMyAPI() {\r\n        await getMessages();\r\n    }\r\n\r\n    fetchMyAPI();\r\n  },               [] );\r\n\r\n  const IconText = ({ icon, text }) => (\r\n    <Space>\r\n      {React.createElement(icon)}\r\n      {text}\r\n    </Space>\r\n  );\r\n\r\n  const getFiltered = (): MessageItem[] => {\r\n    const notFlagged = messages ? messages.filter(x => x.status![0] !== \"Flagged\") : [];\r\n    let flaggedYours: MessageItem[] = [];\r\n\r\n    try {\r\n      flaggedYours = messages ? messages.filter(x => x.status![0] === \"Flagged\" && x.username === props.userProfile.user.email) : [];\r\n    } catch (error) {\r\n      flaggedYours = [];\r\n    }\r\n\r\n    // tslint:disable-next-line: no-console\r\n    console.log(notFlagged, flaggedYours);\r\n    let filtered: MessageItem[] = messages ? messages?.slice(skipped, skipped + 10) : [];\r\n\r\n    if (filter !== \"\") {\r\n\r\n       if (filtered) {\r\n          filtered = filtered!.filter(x => x.username.indexOf(filter) > -1);\r\n       }\r\n\r\n       return filtered;  \r\n     }\r\n\r\n    return filtered;\r\n  };\r\n\r\n  const setAsNotification = async (user: string, msg: string) => {\r\n    const dataPost = {\r\n      \"notifications\": [{\"notification\": msg, \"userId\": user}],\r\n      \"userId\": user\r\n    };\r\n\r\n    try {\r\n      const response = await makePostWithAuth(\"notifications\", dataPost);\r\n      if (response.errors) {\r\n        message.error(\"Invalid details, try again\");    \r\n\r\n      }\r\n    } catch (e) {\r\n      message.error(\"Invalid details, try again\");\r\n    }\r\n  };\r\n\r\n  const modalAction = async (): Promise<void> => {\r\n\r\n    const id = messageToAction?._id;\r\n\r\n    if (actionState === MessageActionState.Deleting) {\r\n      try {\r\n        const response = await makeDelete(\"messages\", id!);\r\n        // tslint:disable-next-line: no-console\r\n        console.log(response);\r\n        getMessages();\r\n        setInProgress(false);\r\n        message.success(\"Deleted\");\r\n      } catch (error) {\r\n        message.error(\"Something went wrong\");\r\n      }\r\n    } else {\r\n\r\n      const newReply = {\r\n        title: messageToAction!.title,\r\n        comment: messageToAction!.comment,\r\n        replies: messageToAction!.replies,\r\n        userName: messageToAction?.username,\r\n        status: actionState === MessageActionState.Flagging ? [\"Flagged\"] : [\"Ok\"],\r\n        Created_date: messageToAction?.Created_date\r\n      };\r\n\r\n      try {\r\n            const response = await makePostWithAuth(`messages/${messageToAction!._id}`, newReply, true);\r\n            // tslint:disable-next-line: no-console\r\n            console.log(response);\r\n            message.warning(\"Comment flagged!\");\r\n            getMessages();\r\n            setInProgress(false);\r\n\r\n            if (actionState === MessageActionState.Flagging) {\r\n               setAsNotification(messageToAction?.username ? messageToAction.username : \"\" , \"Message has been flagged\");\r\n            }\r\n\r\n        } catch (error) {\r\n            message.error(\"Something went wrong\", error);\r\n            getMessages();\r\n            setInProgress(false);\r\n        }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <IsAuthenticated>\r\n      <div className=\"layout\">\r\n        <Row>\r\n          <Col span={2} lg={6}/>     \r\n          <Col span={20} lg={12}>\r\n            <Title>Message center</Title>\r\n            <Divider orientation=\"left\" plain={true} >\r\n              {!messages ? <Skeleton.Input style={{ width: 100, height: \"10px\"}} active={true} /> :             \r\n              <div>\r\n                {`Messages total (${getFiltered()?.length ? getFiltered().length : \"0\"})`}\r\n              </div>}\r\n            </Divider>\r\n                <Flex>\r\n                  {messages && messages!.length > 0 ?\r\n                  <SearchInput\r\n                    allowClear={true}\r\n                    onChange={(e) => {\r\n                      setFilter(e.currentTarget.value); \r\n                    }}\r\n                    placeholder=\"Search username\"\r\n                    style={{ width: 200 }}\r\n                  /> : null }\r\n                  <AddButton \r\n                    size=\"large\" \r\n                    onClick={() => {\r\n                      props.changePage(\"/add-message\");\r\n                    }}\r\n                  >\r\n                    Add new\r\n                  </AddButton>\r\n                </Flex>\r\n            {messages === null  ? <div> {[1, 2, 3, 4].map( (x, y) => {\r\n                return <Skeleton key={y} loading={true} active={true} avatar={true} />;\r\n            })} </div> : \r\n            <React.Fragment>\r\n            <List\r\n              itemLayout=\"horizontal\"\r\n              dataSource={getFiltered()}\r\n              renderItem={(messageItem, i) => (\r\n                <List.Item\r\n                   style={{cursor: \"pointer\"}}\r\n                   onClick={() => {\r\n                     props.setViewedMsg(messageItem);\r\n                     props.changePage(\"/view-message\");\r\n                   }}\r\n                   actions={[\r\n                  <IconText icon={MessageOutlined} text={messageItem.replies.length} key=\"list-vertical-message\" />\r\n                ]}\r\n                >\r\n                  <List.Item.Meta\r\n                    avatar={<Avatar style={{backgroundColor: i % 2 === 0 ? colorAvatarPallete[0] :  colorAvatarPallete[1]}} icon={<UserOutlined />} />}\r\n                    title={<StyledSpanHeading>{messageItem.title} <span>{getTimeFrameFromNow(messageItem.Created_date!)}</span></StyledSpanHeading>}\r\n                    description={messageItem.username === email ? \"You\" : messageItem.username}\r\n                    \r\n                  />\r\n                  {messageItem.status![0] === \"Flagged\" ? <Fragment><Tag color=\"orange\">Flagged</Tag> </Fragment>  : messageItem.comment}\r\n                  {messageItem.username === email ? \r\n                  <Delete \r\n                      onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          setActionState(MessageActionState.Deleting);\r\n                          setAction(messageItem!);\r\n                          setInProgress(true);\r\n                      }} \r\n                  /> :  null }\r\n                  {messageItem.status![0] === \"Flagged\" || messageItem.username === email ? null :\r\n                  <Flag \r\n                      onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          setActionState(MessageActionState.Flagging);\r\n                          setAction(messageItem!);\r\n                          setInProgress(true);\r\n                      }} \r\n                  /> }\r\n                </List.Item>\r\n              )}\r\n            />\r\n            {messages.length > 10 ? \r\n           <Pagination \r\n                defaultCurrent={1}  \r\n                total={messages!.length} \r\n                defaultPageSize={10} \r\n                onChange={(page: number) => {\r\n                  setSkipped((page - 1) * 10 );\r\n                }} \r\n           /> : null }\r\n            </React.Fragment>\r\n      \r\n           }\r\n          </Col>\r\n          <Modal\r\n              title={actionState === MessageActionState.Deleting ? \"Delete Post\" : \"Flag pos\"}\r\n              visible={actionInProgress}\r\n              onOk={modalAction}\r\n              onCancel={() => {\r\n                 setInProgress(false);\r\n              }}\r\n          >\r\n              {actionState === MessageActionState.Deleting ? \r\n              <p>Are you sure you want to delete this post?</p> : \r\n              <p>Are you sure you want to flag this post?</p> } \r\n          </Modal>\r\n        </Row>\r\n      </div>\r\n    </IsAuthenticated>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ safehub }) => ({\r\n  userProfile: safehub.userProfile\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      changePage: value => push(value),\r\n      setViewedMsg\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)((Home));"],"sourceRoot":""}