{"version":3,"sources":["webpack:///./src/api/apiRequest.ts","webpack:///./src/components/loader/pageLoader.tsx","webpack:///./src/components/authentication/isAuthenticated.tsx","webpack:///./src/routes/profile/userProfile.tsx"],"names":["fetchReq","apiUrl","makeGet","url","cookieAuth","method","withCredentials","headers","Accept","then","res","json","makePost","postData","fetchData","body","JSON","stringify","makePostWithAuth","isPut","catch","err","console","log","LoaderStyle","div","LoaderSpinnerStyle","size","userProfile","dispatch","changePage","value","setUserProfile","props","checked","setChecked","response","user","fetchMyAPI","children","Title","email","id","userId","profile","setProfile","orgRegistered","setOrgRegistered","form","useForm","formLoading","setLoading","created","found","error","setFormVal","val","className","span","lg","message","type","active","title","Item","label","name","contactNumber","facebook","twitter","website","initialValues","number","location","address","layout","onFinish","values","dataPost","_id","success","prefix","disabled","placeholder","htmlType"],"mappings":"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","file":"10.js","sourcesContent":["import { getCookie } from \"../services/cookie\";\r\n\r\nconst fetchReq = require(\"node-fetch\");\r\nconst apiUrl = \"https://project-10521262.herokuapp.com/\";\r\n\r\nexport const makeGet = async (url: string) => {\r\n\r\n    const cookieAuth = getCookie(\"token\");\r\n\r\n    let fetchData = {\r\n        method: \"GET\",\r\n        withCredentials: true,\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\" : cookieAuth\r\n        }\r\n      };\r\n\r\n    return await fetchReq(apiUrl + url, fetchData, {\r\n        method: \"GET\"\r\n      }).then(res => res.json());\r\n};\r\n\r\nexport const makePost = async (url: string, postData ) => {\r\n    let fetchData = {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n            ...postData\r\n          })\r\n      };\r\n\r\n    return await fetchReq(apiUrl + url, fetchData, {\r\n        method: \"POST\"\r\n      }).then(res => res.json());\r\n};\r\n\r\nexport const makePostWithAuth = async (url: string, postData, isPut: boolean = false ) => {\r\n\r\n     const cookieAuth = getCookie(\"token\");\r\n \r\n     let fetchData = {\r\n           method: isPut ? \"PUT\" : \"POST\",\r\n           headers: {\r\n             Accept: \"application/json\",\r\n             \"Content-Type\": \"application/json\",\r\n             \"Authorization\": cookieAuth\r\n           },\r\n           withCredentials: true,\r\n           body: JSON.stringify({\r\n             ...postData\r\n           })\r\n       };\r\n \r\n     return await fetchReq(apiUrl + url, fetchData, {\r\n         method: \"POST\"\r\n       }).then(res => res.json()).catch((err) => {\r\n          // tslint:disable-next-line: no-console\r\n          console.log(err);\r\n       });\r\n };","import { Spin } from \"antd\";\r\nimport * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LoaderStyle = styled.div`\r\n    position: fixed;\r\n    height: 100%;\r\n    width: 100%;\r\n    background: rgba(255,255,255, 0.5);\r\n`;\r\n\r\nconst LoaderSpinnerStyle = styled(Spin)`\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n`;\r\n\r\nfunction PageLoader() {\r\n  return (\r\n      <LoaderStyle>\r\n           <LoaderSpinnerStyle size=\"large\" />\r\n      </LoaderStyle>\r\n  );\r\n}\r\n\r\nexport default PageLoader;","import { setUserProfile } from \"../../modules/counter\";\r\nimport { push } from \"connected-react-router\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\nimport React from \"react\";\r\nimport PageLoader from \"../loader/pageLoader\";\r\nimport { makeGet } from \"../../api/apiRequest\";\r\n\r\n// tslint:disable-next-line: typedef\r\nfunction IsAuthenticated(props) {\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  useEffect( () => {\r\n    async function fetchMyAPI() {\r\n      try {\r\n        const response = await makeGet(\"me\");\r\n        if (!response || !response.user) {\r\n          props.changePage(\"/auth\");\r\n        } else {\r\n          props.setUserProfile(response);\r\n          setChecked(true);      \r\n        }\r\n    \r\n      } catch (error) {\r\n        props.changePage(\"/auth\");\r\n      }\r\n    }\r\n\r\n    fetchMyAPI();\r\n},           [] );\r\n\r\n  if (!checked) {\r\n      return <PageLoader />;\r\n  }\r\n\r\n  return props.children;\r\n}\r\n\r\nconst mapStateToProps = ({ counter }) => ({\r\n  userProfile: counter.userProfile\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      changePage: value => push(value),\r\n      setUserProfile\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)((IsAuthenticated));","import * as React from \"react\";\r\nimport { push } from \"connected-react-router\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport {  Row, Col, Typography, Card, Skeleton, Input, Button, message, Alert , Form , Descriptions } from \"antd\";\r\nimport IsAuthenticated from \"../../components/authentication/isAuthenticated\";\r\nimport { useState, useEffect, Fragment } from \"react\";\r\nimport { Organisation } from \"../../domain/interfaces\";\r\nimport { makeGet, makePostWithAuth } from \"../../api/apiRequest\";\r\nimport { UserOutlined, FacebookOutlined , TwitterOutlined, ChromeOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Title } = Typography;\r\n\r\n// tslint:disable-next-line: typedef\r\nfunction UserProfile(props) {\r\n    const email = props.userProfile.user.email;\r\n    const id = props.userProfile.userId;\r\n    const [profile, setProfile] = useState<Organisation|null>(null);\r\n    const [orgRegistered, setOrgRegistered] = useState<boolean>(true);\r\n    const [form] = Form.useForm();\r\n    const [formLoading, setLoading] = useState(false);\r\n\r\n    useEffect( () => {\r\n      async function fetchMyAPI() {\r\n        try {\r\n          const response = await makeGet(`organisations/${id}`);\r\n          if (!response.created) {\r\n            setOrgRegistered(false);\r\n          } else {\r\n            // tslint:disable-next-line: no-console\r\n            console.log(response.found[0]);\r\n            setProfile(response.found[0]);\r\n          }\r\n        } catch (error) {\r\n          message.error(\"Something went wrong , try again\");\r\n        }\r\n      }\r\n  \r\n      fetchMyAPI();\r\n    },         [] );\r\n\r\n    const setFormVal = (val: string): string => {\r\n      return val ? val : \"\";\r\n    };\r\n\r\n    const onFinish = async (values: { address: string; location: string; number: string; facebook: string; twitter: string; name: string; }) => {\r\n      const dataPost: Organisation = {\r\n        address: setFormVal(values.address),\r\n        location: setFormVal(values.location),\r\n        contactNumber: setFormVal(values.number),\r\n        facebook: setFormVal(values.facebook),\r\n        twitter: setFormVal(values.twitter),\r\n        website: setFormVal(values.twitter),\r\n        name: setFormVal(values.name),\r\n        userId: id\r\n      };\r\n\r\n      try {\r\n        setLoading(true);\r\n        const url = orgRegistered ? `organisations/${profile?._id}` : \"organisations\";\r\n        const response = await makePostWithAuth(url, dataPost, orgRegistered);\r\n        setLoading(false);\r\n        setProfile(response);\r\n        message.success(\"Sucessfully updated\");\r\n        } catch (e) {\r\n          message.error(\"Invalid details, try again\");\r\n          setLoading(false);\r\n      }\r\n    };\r\n\r\n    return (\r\n   <IsAuthenticated>\r\n     <div className=\"layout\">\r\n      <Row>\r\n        <Col span={2} lg={6}/>     \r\n        <Col span={20} lg={12}>\r\n        <Title>Profile</Title>\r\n\r\n        {!orgRegistered ? <Alert message=\"Please register your organisation\" type=\"warning\" /> : null}\r\n        <Card size=\"small\">\r\n        {profile === null ? \r\n        <Skeleton active={true} /> :\r\n        <Fragment>\r\n          <Descriptions title=\"User Info\">\r\n            <Descriptions.Item label=\"UserName\">{profile.name}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Telephone\">{profile.contactNumber}</Descriptions.Item>\r\n            <Descriptions.Item label=\"fb\">{profile?.facebook !== \"\" ? <FacebookOutlined /> : \"NA\"} </Descriptions.Item>\r\n            <Descriptions.Item label=\"Twitter\">{profile?.twitter !== \"\" ? <TwitterOutlined /> : \"NA\"} </Descriptions.Item>\r\n            <Descriptions.Item label=\"Web\">{profile?.website !== \"\" ? <ChromeOutlined /> : \"NA\"} </Descriptions.Item>\r\n          </Descriptions>\r\n            <Form\r\n              initialValues={{\r\n                name: profile.name,\r\n                number: profile.contactNumber,\r\n                location: profile.location,\r\n                address: profile.address,\r\n                website: profile.website,\r\n                facebook: profile.facebook,\r\n                twitter: profile.twitter\r\n\r\n              }}\r\n              layout=\"vertical\"\r\n              form={form}\r\n              onFinish={onFinish}\r\n            >\r\n              <Form.Item label=\"Username\">\r\n              <Input prefix={<UserOutlined />} value={email} disabled={true} />\r\n              </Form.Item>\r\n              <Form.Item label=\"Org name\" name=\"name\">\r\n              <Input placeholder={profile.name} disabled={formLoading} />\r\n              </Form.Item>\r\n              <Form.Item label=\"Contact No\" name=\"number\">\r\n                <Input value={profile.contactNumber} disabled={formLoading} />\r\n              </Form.Item>\r\n              <Form.Item label=\"Location\" name=\"location\">\r\n                <Input value={profile.location} disabled={formLoading} />\r\n              </Form.Item>\r\n              <Form.Item label=\"Address\" name=\"address\">\r\n                <Input value={profile.address} disabled={formLoading} />\r\n              </Form.Item>\r\n              <Form.Item label=\"Website\" name=\"website\">\r\n                <Input prefix={<ChromeOutlined />} value={profile.website} disabled={formLoading} />\r\n              </Form.Item>\r\n              <Form.Item label=\"Facebook\" name=\"facebook\">\r\n                <Input prefix={<FacebookOutlined />} value={profile.facebook} disabled={formLoading} />\r\n              </Form.Item>\r\n              <Form.Item label=\"Twitter\" name=\"twitter\">\r\n                <Input prefix={<TwitterOutlined />} value={profile.twitter} disabled={formLoading} />\r\n              </Form.Item>\r\n              <Form.Item>\r\n              <Button disabled={formLoading} type=\"primary\" htmlType=\"submit\">Update</Button>\r\n              </Form.Item>\r\n            </Form>\r\n        </Fragment>\r\n        }\r\n        </Card>\r\n        </Col>\r\n        <Col span={2} lg={4}/> \r\n      </Row>\r\n    </div>\r\n   </IsAuthenticated>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ counter }) => ({\r\n  userProfile: counter.userProfile\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      changePage: value => push(value),\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)((UserProfile));"],"sourceRoot":""}