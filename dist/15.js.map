{"version":3,"sources":["webpack:///./src/routes/orgs/organisations.tsx"],"names":["Title","userProfile","dispatch","changePage","value","setViewedOrganisation","props","orgs","setOrgs","userId","console","log","response","filter","x","fetchMyAPI","className","span","lg","orientation","plain","length","Input","style","width","height","active","map","_x","y","key","loading","avatar","itemLayout","dataSource","renderItem","item","Item","cursor","onClick","name","toLowerCase","Meta","backgroundColor","icon","title","description","address"],"mappings":"0iDAUQA,EAAU,IAAU,MAgFb,uBAbS,SAAC,GAAgB,OACrCC,YAD8B,UACTA,gBAGE,SAAAC,GACzB,mBACE,CACEC,WAAY,SAAAC,GAAS,mBAAKA,IAC1BC,sBAAqB,KAEvBH,KAGW,EA9Ef,SAAuBI,GAAvB,WAEU,EAAkB,WAAoC,MAArDC,EAAI,KAAEC,EAAO,KACdC,EAASH,EAAML,YAAcK,EAAML,YAAYQ,OAAS,GAsB9D,OAnBAC,QAAQC,IAAIJ,EAAM,QAWlB,aAAiB,YACb,W,mFACI,SAXQ,8B,wDAEO,O,sBAAA,GAAM,YAAQ,kB,cAAzBK,EAAW,SACjBJ,EAAQI,EAASC,QAAO,SAAAC,GAAK,OAAAA,EAAEL,SAAWA,M,6BAE1CD,EAAQ,I,6CAMN,S,WAGJO,KACa,IAGb,uBAAKC,UAAU,UACX,gBAAC,IAAG,KACA,gBAAC,IAAG,CAACC,KAAM,EAAGC,GAAI,IAClB,gBAAC,IAAG,CAACD,KAAM,GAAIC,GAAI,IACnB,gBAAClB,EAAK,sBACN,gBAAC,IAAO,CAACmB,YAAY,OAAOC,OAAO,GAC7Bb,EACF,2BACK,0BAAwBA,aAAI,EAAJA,EAAMc,QAASd,EAAKc,OAAS,KAAG,KAFpD,gBAAC,IAASC,MAAK,CAACC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,QAASC,QAAQ,KAKjE,OAATnB,EAAiB,2B,IAAO,CAAC,EAAG,EAAG,EAAG,GAAGoB,KAAK,SAACC,EAAIC,GAC3C,OAAO,gBAAC,IAAQ,CAACC,IAAKD,EAAGE,SAAS,EAAML,QAAQ,EAAMM,QAAQ,O,KAEnE,gBAAC,IAAI,CACDC,WAAW,aACXC,WAAY3B,EACZ4B,WAAY,SAAAC,GAAQ,OACpB,gBAAC,IAAKC,KAAI,CACNd,MAAO,CAACe,OAAQ,WAChBC,QAAS,WACLjC,EAAMD,sBAAsB+B,GAC5B9B,EAAMH,WAAW,kBAAkBiC,EAAKI,KAAKC,iBAGjD,gBAAC,IAAKJ,KAAKK,KAAI,CACXV,OAAQ,gBAAC,IAAM,CAACT,MAAO,CAACoB,gBAAiB,WAAYC,KAAM,gBAAC,IAAY,QACxEC,MAAOT,EAAKI,KACZM,YAAaV,EAAKW","file":"15.js","sourcesContent":["import * as React from \"react\";\r\nimport { push } from \"connected-react-router\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, Typography, Skeleton, List, Avatar, Divider } from \"antd\";\r\nimport { makeGet } from \"../../api/apiRequest\";\r\nimport { Organisation } from \"../../domain/interfaces\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\nimport { setViewedOrganisation } from \"../../modules/counter\";\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction Organisations(props: { userProfile: { userId: string; }; setViewedOrganisation: (arg0: Organisation) => void; changePage: (arg0: string) => void; }) {\r\n\r\n    const [orgs, setOrgs] = React.useState<Organisation[]|null>(null);\r\n    const userId = props.userProfile ? props.userProfile.userId : \"\";\r\n\r\n    // tslint:disable-next-line: no-console\r\n    console.log(orgs, \"orgs\");\r\n\r\n    const getOrgs = async () => {\r\n        try {\r\n          const response = await makeGet(\"organisations\");\r\n          setOrgs(response.filter(x => x.userId !== userId));\r\n        } catch (error) {\r\n          setOrgs([]);\r\n        }\r\n      };\r\n    \r\n    React.useEffect( () => {\r\n        async function fetchMyAPI() {\r\n            await getOrgs();\r\n        }\r\n    \r\n        fetchMyAPI();\r\n    },               [] );\r\n\r\n    return (\r\n        <div className=\"layout\">\r\n            <Row>\r\n                <Col span={2} lg={6}/>     \r\n                <Col span={20} lg={12}>\r\n                <Title>Organisations</Title>\r\n                <Divider orientation=\"left\" plain={true} >\r\n                    {!orgs ? <Skeleton.Input style={{ width: 100, height: \"10px\"}} active={true} /> :             \r\n                    <div>\r\n                        {`Organisations total (${orgs?.length ? orgs.length : \"0\"})`}\r\n                    </div>}\r\n                </Divider>\r\n                {orgs === null  ? <div> {[1, 2, 3, 4].map( (_x, y) => {\r\n                     return <Skeleton key={y} loading={true} active={true} avatar={true} />;\r\n                })} </div> : \r\n                <List\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={orgs}\r\n                    renderItem={item => (\r\n                    <List.Item\r\n                        style={{cursor: \"pointer\"}}\r\n                        onClick={() => {\r\n                            props.setViewedOrganisation(item);\r\n                            props.changePage(`/organisations/${item.name.toLowerCase()}`);\r\n                        }}\r\n                    >\r\n                        <List.Item.Meta\r\n                            avatar={<Avatar style={{backgroundColor: \"#1de9b6\"}} icon={<UserOutlined />} />}\r\n                            title={item.name}\r\n                            description={item.address}\r\n                        />\r\n                    </List.Item>\r\n                    )}\r\n                />}\r\n            </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({ counter }) => ({\r\n    userProfile: counter.userProfile\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      changePage: value => push(value),\r\n      setViewedOrganisation\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)((Organisations));"],"sourceRoot":""}