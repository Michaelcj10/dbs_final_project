{"version":3,"sources":["webpack:///./src/components/loader/pageLoader.tsx","webpack:///./src/components/authentication/isAuthenticated.tsx","webpack:///./src/routes/profile/userProfile.tsx"],"names":["LoaderStyle","div","LoaderSpinnerStyle","size","userProfile","dispatch","changePage","value","setUserProfile","setOrganisation","props","checked","setChecked","response","user","userId","org","console","log","fetchMyAPI","children","basicOrg","facebook","twitter","website","contactNumber","address","location","name","Title","email","id","profile","setProfile","orgRegistered","setOrgRegistered","form","useForm","formLoading","setLoading","created","found","error","setFormVal","val","className","span","lg","message","type","active","title","Item","label","initialValues","number","layout","onFinish","values","dataPost","url","_id","success","prefix","disabled","placeholder","htmlType"],"mappings":"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","file":"13.js","sourcesContent":["import { Spin } from \"antd\";\r\nimport * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LoaderStyle = styled.div`\r\n    position: fixed;\r\n    height: 100%;\r\n    width: 100%;\r\n    background: rgba(255,255,255, 0.5);\r\n`;\r\n\r\nconst LoaderSpinnerStyle = styled(Spin)`\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n`;\r\n\r\nfunction PageLoader() {\r\n  return (\r\n      <LoaderStyle>\r\n           <LoaderSpinnerStyle size=\"large\" />\r\n      </LoaderStyle>\r\n  );\r\n}\r\n\r\nexport default PageLoader;","import { setUserProfile, setOrganisation } from \"../../modules/counter\";\r\nimport { push } from \"connected-react-router\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\nimport React from \"react\";\r\nimport PageLoader from \"../loader/pageLoader\";\r\nimport { makeGet } from \"../../api/apiRequest\";\r\n\r\n// tslint:disable-next-line: typedef\r\nfunction IsAuthenticated(props) {\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  useEffect( () => {\r\n    async function fetchMyAPI() {\r\n      try {\r\n        const response = await makeGet(\"me\");\r\n        if (!response || !response.user) {\r\n          props.changePage(\"/auth\");\r\n        } else {\r\n          props.setUserProfile(response);\r\n          setChecked(true);      \r\n\r\n          try {\r\n            const org = await makeGet(`organisations/${response.userId}`);\r\n            props.setOrganisation(org);         \r\n          } catch (error) {\r\n            // tslint:disable-next-line: no-console\r\n            console.log(error);  \r\n          }\r\n        }\r\n      } catch (error) {\r\n        props.changePage(\"/auth\");\r\n      }\r\n    }\r\n\r\n    fetchMyAPI();\r\n},           [] );\r\n\r\n  if (!checked) {\r\n      return <PageLoader />;\r\n  }\r\n\r\n  return props.children;\r\n}\r\n\r\nconst mapStateToProps = ({ counter }) => ({\r\n  userProfile: counter.userProfile\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      changePage: value => push(value),\r\n      setUserProfile,\r\n      setOrganisation\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)((IsAuthenticated));","import * as React from \"react\";\r\nimport { push } from \"connected-react-router\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport {  Row, Col, Typography, Card, Skeleton, Input, Button, message, Alert , Form , Descriptions } from \"antd\";\r\nimport IsAuthenticated from \"../../components/authentication/isAuthenticated\";\r\nimport { useState, useEffect, Fragment } from \"react\";\r\nimport { Organisation } from \"../../domain/interfaces\";\r\nimport { makeGet, makePostWithAuth } from \"../../api/apiRequest\";\r\nimport { UserOutlined, FacebookOutlined , TwitterOutlined, ChromeOutlined } from \"@ant-design/icons\";\r\n\r\nconst basicOrg: Organisation = {\r\n  facebook: \"\",\r\n  twitter: \"\",\r\n  website: \"\",\r\n  contactNumber: \"\",\r\n  address: \"\",\r\n  location: \"\",\r\n  name: \"\"\r\n};\r\nconst { Title } = Typography;\r\n\r\n// tslint:disable-next-line: typedef\r\nfunction UserProfile(props) {\r\n    const email = props.userProfile.user.email;\r\n    const id = props.userProfile.userId;\r\n    const [profile, setProfile] = useState<Organisation|null>(null);\r\n    const [orgRegistered, setOrgRegistered] = useState<boolean>(true);\r\n    const [form] = Form.useForm();\r\n    const [formLoading, setLoading] = useState(false);\r\n\r\n    useEffect( () => {\r\n      async function fetchMyAPI() {\r\n        try {\r\n          const response = await makeGet(`organisations/${id}`);\r\n          if (!response.created) {\r\n            setOrgRegistered(false);\r\n            setProfile(basicOrg);\r\n          } else {\r\n            // tslint:disable-next-line: no-console\r\n            console.log(response.found[0]);\r\n            setProfile(response.found[0]);\r\n          }\r\n        } catch (error) {\r\n          message.error(\"Something went wrong , try again\");\r\n          setProfile(basicOrg);\r\n        }\r\n      }\r\n  \r\n      fetchMyAPI();\r\n    },         [] );\r\n\r\n    const setFormVal = (val: string): string => {\r\n      return val ? val : \"\";\r\n    };\r\n\r\n    const onFinish = async (values: { address: string; location: string; number: string; facebook: string; twitter: string; website: string; name: string; }) => {\r\n      const dataPost: Organisation = {\r\n        address: setFormVal(values.address),\r\n        location: setFormVal(values.location),\r\n        contactNumber: setFormVal(values.number),\r\n        facebook: setFormVal(values.facebook),\r\n        twitter: setFormVal(values.twitter),\r\n        website: setFormVal(values.website),\r\n        name: setFormVal(values.name),\r\n        userId: id\r\n      };\r\n\r\n      try {\r\n        setLoading(true);\r\n        const url = orgRegistered ? `organisations/${profile?._id}` : \"organisations\";\r\n        const response = await makePostWithAuth(url, dataPost, orgRegistered);\r\n        setLoading(false);\r\n        setProfile(response);\r\n        message.success(\"Sucessfully updated\");\r\n        } catch (e) {\r\n          message.error(\"Invalid details, try again\");\r\n          setLoading(false);\r\n      }\r\n    };\r\n\r\n    return (\r\n   <IsAuthenticated>\r\n     <div className=\"layout\">\r\n      <Row>\r\n        <Col span={2} lg={6}/>     \r\n        <Col span={20} lg={12}>\r\n        <Title>Profile</Title>\r\n        {!orgRegistered ? <Alert message=\"Please register your organisation\" type=\"warning\" /> : null}\r\n        <Card size=\"small\">\r\n        {profile === null ? \r\n        <Skeleton active={true} /> :\r\n        <Fragment>\r\n          <Descriptions title=\"User Info\">\r\n            <Descriptions.Item label=\"UserName\">{profile.name}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Telephone\">{profile.contactNumber}</Descriptions.Item>\r\n            <Descriptions.Item label=\"fb\">{profile?.facebook !== \"\" ? <FacebookOutlined /> : \"NA\"} </Descriptions.Item>\r\n            <Descriptions.Item label=\"Twitter\">{profile?.twitter !== \"\" ? <TwitterOutlined /> : \"NA\"} </Descriptions.Item>\r\n            <Descriptions.Item label=\"Web\">{profile?.website !== \"\" ? <ChromeOutlined /> : \"NA\"} </Descriptions.Item>\r\n          </Descriptions>\r\n            <Form\r\n              initialValues={{\r\n                name: profile.name,\r\n                number: profile.contactNumber,\r\n                location: profile.location,\r\n                address: profile.address,\r\n                website: profile.website,\r\n                facebook: profile.facebook,\r\n                twitter: profile.twitter\r\n\r\n              }}\r\n              layout=\"vertical\"\r\n              form={form}\r\n              onFinish={onFinish}\r\n            >\r\n              <Form.Item label=\"Username\">\r\n              <Input prefix={<UserOutlined />} value={email} disabled={true} />\r\n              </Form.Item>\r\n              <Form.Item label=\"Org name\" name=\"name\">\r\n              <Input placeholder={profile.name} disabled={formLoading} />\r\n              </Form.Item>\r\n              <Form.Item label=\"Contact No\" name=\"number\">\r\n                <Input value={profile.contactNumber} disabled={formLoading} />\r\n              </Form.Item>\r\n              <Form.Item label=\"Location\" name=\"location\">\r\n                <Input value={profile.location} disabled={formLoading} />\r\n              </Form.Item>\r\n              <Form.Item label=\"Address\" name=\"address\">\r\n                <Input value={profile.address} disabled={formLoading} />\r\n              </Form.Item>\r\n              <Form.Item label=\"Website\" name=\"website\">\r\n                <Input prefix={<ChromeOutlined />} value={profile.website} disabled={formLoading} />\r\n              </Form.Item>\r\n              <Form.Item label=\"Facebook\" name=\"facebook\">\r\n                <Input prefix={<FacebookOutlined />} value={profile.facebook} disabled={formLoading} />\r\n              </Form.Item>\r\n              <Form.Item label=\"Twitter\" name=\"twitter\">\r\n                <Input prefix={<TwitterOutlined />} value={profile.twitter} disabled={formLoading} />\r\n              </Form.Item>\r\n              <Form.Item>\r\n              <Button disabled={formLoading} type=\"primary\" htmlType=\"submit\">Update</Button>\r\n              </Form.Item>\r\n            </Form>\r\n        </Fragment>\r\n        }\r\n        </Card>\r\n        </Col>\r\n        <Col span={2} lg={4}/> \r\n      </Row>\r\n    </div>\r\n   </IsAuthenticated>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ counter }) => ({\r\n  userProfile: counter.userProfile\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      changePage: value => push(value),\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)((UserProfile));"],"sourceRoot":""}